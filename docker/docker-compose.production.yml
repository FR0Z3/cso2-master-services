version: '2.1'
services:
  master-server:
    container_name: cso2-master-server
    image: cso2-master-server
    build: ./master-server
    restart: always
    environment:
      NODE_ENV: production
      USERSERVICE_HOST: cso2-users-service.consul
      USERSERVICE_PORT: 30100
      INVSERVICE_HOST: cso2-inventory-service.consul
      INVSERVICE_PORT: 30101
    ports:
      - 30001:30001
      - 30002:30002/udp
    networks:
      - consul
  users-service:
    container_name: cso2-users-service
    image: cso2-users-service
    build: ./users-service
    restart: always
    environment:
      NODE_ENV: production
      USERS_PORT: 30100
      DB_HOST: mongo.consul
      DB_PORT: 27017
      DB_NAME: cso2
    ports:
      - 30100
    depends_on:
      - registrator
      - mongo
    networks:
      - consul
  inventory-service:
    container_name: cso2-inventory-service
    image: cso2-inventory-service
    build: ./inventory-service
    restart: always
    environment:
      NODE_ENV: production
      INVENTORY_PORT: 30101
      DB_HOST: mongo.consul
      DB_PORT: 27017
      DB_NAME: cso2
    ports:
      - 30101
    depends_on:
      - registrator
      - mongo
    networks:
      - consul
  webapp:
    container_name: cso2-webapp
    image: cso2-webapp
    build: ./webapp
    restart: always
    environment:
      NODE_ENV: production
      WEBAPP_PORT: 8080
      USERSERVICE_HOST: cso2-users-service.consul
      USERSERVICE_PORT: 30100
      INVSERVICE_HOST: cso2-inventory-service.consul
      INVSERVICE_PORT: 30101
    ports:
      - 8080:8080
    depends_on:
      - registrator
      - users-service
      - inventory-service
    networks:
      - consul
  mongo:
    container_name: mongo_cso2
    image: 'mongo:latest'
    ports:
      - 27017:27017
    volumes:
      - './db:/data/db'
    networks:
      - consul
  consul:
    hostname: consul
    container_name: consul
    image: 'consul:latest'
    restart: always
    volumes:
      - consul:/etc/consul.d
    ports:
      - 8300
      - 8301
      - 8302
      - 8500
    entrypoint:
      - consul
      - agent
      - '-server'
      - '-config-dir=/etc/consul.d'
      - '-data-dir=/opt/consul'
      - '-bind={{ GetInterfaceIP "eth0" }}'
      - '-client=0.0.0.0'
    networks:
      - consul
    labels:
      - SERVICE_IGNORE
  registrator:
    container_name: registrator
    command: '-internal consul://consul:8500'
    privileged: true
    image: 'gliderlabs/registrator:latest'
    restart: always
    links:
      - consul
    depends_on:
      - consul
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      - consul
networks:
  consul:
    external:
      name: consul
volumes:
  consul: